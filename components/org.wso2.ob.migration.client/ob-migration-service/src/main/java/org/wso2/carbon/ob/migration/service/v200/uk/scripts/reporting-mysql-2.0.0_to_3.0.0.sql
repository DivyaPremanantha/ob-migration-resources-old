
-- ACCOUNTS_RAW_DATA migration

ALTER TABLE ACCOUNTS_RAW_DATA DROP COLUMN TRA_DECISION;
ALTER TABLE ACCOUNTS_RAW_DATA DROP COLUMN EXEMPTION;
ALTER TABLE ACCOUNTS_RAW_DATA DROP COLUMN IS_FRAUD;
ALTER TABLE ACCOUNTS_RAW_DATA ADD COLUMN `API_SPEC_VERSION` varchar(254) DEFAULT NULL;
ALTER TABLE ACCOUNTS_RAW_DATA ADD COLUMN `CONSENT_TYPE` varchar(254) DEFAULT NULL;
ALTER TABLE ACCOUNTS_RAW_DATA ADD COLUMN `EXPIRATION_DATE_TIME` varchar(254) DEFAULT NULL;
ALTER TABLE ACCOUNTS_RAW_DATA ADD COLUMN `MESSAGE_ID` varchar(254) DEFAULT NULL;

UPDATE ACCOUNTS_RAW_DATA ARD
    INNER JOIN UK_ADDITIONAL_RAW_DATA UARD ON UARD.ID=ARD.ID
    SET ARD.API_SPEC_VERSION = UARD.API_SPEC_VERSION;

UPDATE ACCOUNTS_RAW_DATA ARD
    INNER JOIN UK_ADDITIONAL_RAW_DATA UARD ON UARD.ID=ARD.ID
    SET ARD.CONSENT_TYPE = UARD.CONSENT_TYPE;

UPDATE ACCOUNTS_RAW_DATA ARD
    INNER JOIN UK_ADDITIONAL_RAW_DATA UARD ON UARD.ID=ARD.ID
    SET ARD.EXPIRATION_DATE_TIME = UARD.EXPIRATION_DATE_TIME;

UPDATE ACCOUNTS_RAW_DATA ARD
    INNER JOIN API_INVOCATION_RAW_DATA AIRD ON AIRD.ID=ARD.ID
    SET ARD.MESSAGE_ID = AIRD.ID;

UPDATE ACCOUNTS_RAW_DATA SET ID = UUID();


-- FUNDS_CONFIRMATION_RAW_DATA migration

ALTER TABLE FUNDS_CONFIRMATION_RAW_DATA DROP COLUMN IS_FRAUD;
ALTER TABLE FUNDS_CONFIRMATION_RAW_DATA ADD COLUMN `API_SPEC_VERSION` varchar(254) DEFAULT NULL;
ALTER TABLE FUNDS_CONFIRMATION_RAW_DATA ADD COLUMN `CONSENT_TYPE` varchar(254) DEFAULT NULL;
ALTER TABLE FUNDS_CONFIRMATION_RAW_DATA ADD COLUMN `EXPIRATION_DATE_TIME` varchar(254) DEFAULT NULL;
ALTER TABLE FUNDS_CONFIRMATION_RAW_DATA ADD COLUMN `MESSAGE_ID` varchar(254) DEFAULT NULL;

UPDATE FUNDS_CONFIRMATION_RAW_DATA FCRD
    INNER JOIN UK_ADDITIONAL_RAW_DATA UARD ON UARD.ID=FCRD.ID
    SET FCRD.API_SPEC_VERSION = UARD.API_SPEC_VERSION;

UPDATE FUNDS_CONFIRMATION_RAW_DATA FCRD
    INNER JOIN UK_ADDITIONAL_RAW_DATA UARD ON UARD.ID=FCRD.ID
    SET FCRD.CONSENT_TYPE = UARD.CONSENT_TYPE;

UPDATE FUNDS_CONFIRMATION_RAW_DATA FCRD
    INNER JOIN UK_ADDITIONAL_RAW_DATA UARD ON UARD.ID=FCRD.ID
    SET FCRD.EXPIRATION_DATE_TIME = UARD.EXPIRATION_DATE_TIME;

UPDATE FUNDS_CONFIRMATION_RAW_DATA FCRD
    INNER JOIN API_INVOCATION_RAW_DATA AIRD ON AIRD.ID=FCRD.ID
    SET FCRD.MESSAGE_ID = AIRD.ID;

UPDATE FUNDS_CONFIRMATION_RAW_DATA SET ID = UUID();


-- PAYMENTS_RAW_DATA migration

CREATE TABLE `PAYMENTS_RAW_DATA_TEMP` (
    `ID` varchar(254) NOT NULL,
    `CONSENT_ID` varchar(254) DEFAULT NULL,
    `USER_ID` varchar(254) DEFAULT NULL,
    `TPP_ID` varchar(254) DEFAULT NULL,
    `CLIENT_ID` varchar(254) DEFAULT NULL,
    `PAYMENT_TYPE` varchar(254) DEFAULT NULL,
    `TIMESTAMP` bigint(20) NOT NULL,
    `API_SPEC_VERSION` varchar(254) DEFAULT NULL,
    `CREDITOR_ACCOUNT_ID` varchar(254) DEFAULT NULL,
    `DEBTOR_ACCOUNT_ID` varchar(254) DEFAULT NULL,
    `MULTI_AUTHORISATION` tinyint(1) DEFAULT NULL,
    `CURRENCY` varchar(254) DEFAULT NULL,
    `AMOUNT` varchar(254) DEFAULT NULL,
    `NO_OF_TRANSACTIONS` varchar(254) DEFAULT NULL,
    `LOCAL_INSTRUMENT` varchar(254) DEFAULT NULL,
    `PAYMENT_SUBMISSION_ID` varchar(254) DEFAULT NULL,
    `MULTI_AUTH_USERS_COUNT` int(11) DEFAULT NULL,
    `PAYMENT_REFUND` varchar(254) DEFAULT NULL,
    `CONSENT_TYPE` varchar(254) DEFAULT NULL,
    `DELIVERY_ADDRESS` varchar(254) DEFAULT NULL,
    `MESSAGE_ID` varchar(254) DEFAULT NULL,
    PRIMARY KEY (`ID`,`TIMESTAMP`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

INSERT INTO PAYMENTS_RAW_DATA_TEMP
           (ID, CONSENT_ID, USER_ID, TPP_ID, CLIENT_ID, PAYMENT_TYPE, TIMESTAMP, API_SPEC_VERSION, CREDITOR_ACCOUNT_ID,
            DEBTOR_ACCOUNT_ID, MULTI_AUTHORISATION, CURRENCY, AMOUNT, NO_OF_TRANSACTIONS, LOCAL_INSTRUMENT,
            PAYMENT_SUBMISSION_ID, MULTI_AUTH_USERS_COUNT, PAYMENT_REFUND, CONSENT_TYPE, DELIVERY_ADDRESS, MESSAGE_ID)
SELECT
    UUID(), CONSENT_ID, USER_ID, TPP_ID, CLIENT_ID, PAYMENT_TYPE, TIMESTAMP,
    (SELECT API_SPEC_VERSION from UK_ADDITIONAL_RAW_DATA UARD where UARD.ID=PRD.ID),
    CREDITOR_ACCOUNT_ID, DEBTOR_ACCOUNT_ID, MULTI_AUTHORISATION, CURRENCY, AMOUNT, NO_OF_TRANSACTIONS,
    (SELECT LOCAL_INSTRUMENT from UK_ADDITIONAL_RAW_DATA UARD where UARD.ID=PRD.ID),
    PAYMENT_SUBMISSION_ID, MULTI_AUTH_USERS_COUNT,
    (SELECT PAYMENT_REFUND from UK_ADDITIONAL_RAW_DATA UARD where UARD.ID=PRD.ID),
    (SELECT CONSENT_TYPE from UK_ADDITIONAL_RAW_DATA UARD where UARD.ID=PRD.ID),
    (SELECT deliveryAddress from TransactionDeliveryAddress TDA where TDA.consentId=PRD.CONSENT_ID),
    (SELECT ID from API_INVOCATION_RAW_DATA AIRD where AIRD.ID=PRD.ID)
FROM   PAYMENTS_RAW_DATA PRD;

DROP TABLE PAYMENTS_RAW_DATA;

ALTER TABLE PAYMENTS_RAW_DATA_TEMP RENAME TO PAYMENTS_RAW_DATA;


-- API_LATENCY_RAW_DATA migration

CREATE TABLE `API_LATENCY_RAW_DATA` (
    `ID` varchar(254) NOT NULL,
    `MESSAGE_ID` varchar(254) NOT NULL,
    `REQUEST_TIMESTAMP` varchar(254) DEFAULT NULL,
    `BACKEND_LATENCY` bigint(20) DEFAULT NULL,
    `REQUEST_MEDIATION_LATENCY` bigint(20) DEFAULT NULL,
    `RESPONSE_LATENCY` bigint(20) DEFAULT NULL,
    `RESPONSE_MEDIATION_LATENCY` bigint(20) DEFAULT NULL,
    PRIMARY KEY (`ID`,`MESSAGE_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

INSERT INTO API_LATENCY_RAW_DATA
    (ID, MESSAGE_ID, REQUEST_TIMESTAMP, BACKEND_LATENCY, REQUEST_MEDIATION_LATENCY, RESPONSE_LATENCY,
     RESPONSE_MEDIATION_LATENCY)
SELECT UUID(),
       ID,
       CASE
           WHEN REQUEST_EXQ_START_TIME > 0
               THEN DATE_FORMAT(
                   CONVERT_TZ(
                           FROM_UNIXTIME(REQUEST_EXQ_START_TIME/1000),
                           @@session.time_zone,
                           '+00:00'
                       ),
                   '%Y-%m-%dT%T.000Z'
               )
           ELSE  DATE_FORMAT(
                   CONVERT_TZ( FROM_UNIXTIME(TIMESTAMP), @@session.time_zone, '+00:00'),
                   '%Y-%m-%dT%T.000Z'
               )
           END,
       BACKEND_LATENCY,
       ( BACKEND_REQ_START_TIME - REQUEST_EXQ_START_TIME ),
       CASE
           WHEN REQUEST_EXQ_START_TIME > 0 AND ( TIMESTAMP * 1000 - REQUEST_EXQ_START_TIME ) > 0
               THEN  ( TIMESTAMP * 1000 - REQUEST_EXQ_START_TIME )
           ELSE 0
           END,
       CASE
           WHEN BACKEND_REQ_END_TIME > 0 AND ( TIMESTAMP * 1000 - BACKEND_REQ_END_TIME ) > 0
               THEN  ( TIMESTAMP * 1000 - BACKEND_REQ_END_TIME )
           ELSE 0
           END
FROM   API_INVOCATION_RAW_DATA;


-- API_INVOCATION_RAW_DATA migration

ALTER TABLE API_INVOCATION_RAW_DATA DROP COLUMN REQUEST_EXQ_START_TIME;
ALTER TABLE API_INVOCATION_RAW_DATA DROP COLUMN BACKEND_REQ_START_TIME;
ALTER TABLE API_INVOCATION_RAW_DATA DROP COLUMN BACKEND_REQ_END_TIME;
ALTER TABLE API_INVOCATION_RAW_DATA DROP COLUMN BACKEND_LATENCY;
ALTER TABLE API_INVOCATION_RAW_DATA DROP COLUMN AUTHORISATION_STATUS;
ALTER TABLE API_INVOCATION_RAW_DATA DROP COLUMN STATUS_MESSAGE;

ALTER TABLE API_INVOCATION_RAW_DATA ADD COLUMN `API_SPEC_VERSION` varchar(254) DEFAULT NULL;

ALTER TABLE API_INVOCATION_RAW_DATA ADD TIMESTAMP_TEMP bigint(20) DEFAULT NULL;

UPDATE API_INVOCATION_RAW_DATA SET TIMESTAMP_TEMP = TIMESTAMP;

ALTER TABLE API_INVOCATION_RAW_DATA DROP COLUMN TIMESTAMP;

ALTER TABLE API_INVOCATION_RAW_DATA CHANGE TIMESTAMP_TEMP TIMESTAMP bigint(20) DEFAULT NULL;

ALTER TABLE API_INVOCATION_RAW_DATA ADD COLUMN `MESSAGE_ID` varchar(254) DEFAULT NULL;

ALTER TABLE API_INVOCATION_RAW_DATA CHANGE TPP_ID CONSUMER_ID varchar(254) DEFAULT NULL;

UPDATE API_INVOCATION_RAW_DATA SET MESSAGE_ID = ID;

UPDATE API_INVOCATION_RAW_DATA ARD
    INNER JOIN UK_ADDITIONAL_RAW_DATA UARD ON UARD.ID=ARD.ID
    SET ARD.API_SPEC_VERSION = UARD.API_SPEC_VERSION;


-- AUTHENTICATION_RAW_DATA migration

ALTER TABLE AUTHENTICATION_RAW_DATA DROP COLUMN USER_AGENT;
ALTER TABLE AUTHENTICATION_RAW_DATA DROP COLUMN IS_SCA_APPLIED;

ALTER TABLE AUTHENTICATION_RAW_DATA ADD COLUMN `PSU_CHANNEL` varchar(254) DEFAULT NULL;

UPDATE AUTHENTICATION_RAW_DATA ARD
    INNER JOIN UK_ADDITIONAL_RAW_DATA UARD ON UARD.ID=ARD.ID
    SET ARD.PSU_CHANNEL = UARD.PSU_CHANNEL;


-- AUTHORISATION_RAW_DATA migration

ALTER TABLE AUTHORISATION_RAW_DATA ADD COLUMN `PSU_INTERACTION_TIME` bigint(20) DEFAULT NULL;

UPDATE AUTHORISATION_RAW_DATA ARD
    INNER JOIN UK_ADDITIONAL_RAW_DATA UARD ON UARD.ID=ARD.ID
    SET ARD.PSU_INTERACTION_TIME = UARD.PSU_INTERACTION_TIME;

-- Removing other additional tables.

DROP TABLE ApplicationBlacklist;
DROP TABLE CONSENT_RAW_DATA;
DROP TABLE FraudulentTransactionData;
DROP TABLE GreyList;
DROP TABLE TransactionDeliveryAddress;
DROP TABLE UserBlacklist;
DROP TABLE UK_ADDITIONAL_RAW_DATA;
